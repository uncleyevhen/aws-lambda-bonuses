#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –ª–æ–≥—ñ–≤ Lambda —Ñ—É–Ω–∫—Ü—ñ–π —É —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ

set -e

# –ö–æ–ª—å–æ—Ä–∏
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
PURPLE='\033[0;35m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É –º–µ–Ω—é
show_menu() {
    echo -e "${PURPLE}üìã –ú–û–ù–Ü–¢–û–†–ò–ù–ì –õ–û–ì–Ü–í LAMBDA –§–£–ù–ö–¶–Ü–ô${NC}"
    echo "======================================="
    echo "1) üì± get-promo-code –ª–æ–≥–∏"
    echo "2) üîÑ replenish-promo-code –ª–æ–≥–∏"
    echo "3) üë• –û–±–∏–¥–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó (—Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –µ–∫—Ä–∞–Ω–∏)"
    echo "4) üîç –ü–æ—à—É–∫ –≤ –ª–æ–≥–∞—Ö get-promo-code"
    echo "5) üîç –ü–æ—à—É–∫ –≤ –ª–æ–≥–∞—Ö replenish-promo-code"
    echo "6) üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏–∫–ª–∏–∫—ñ–≤ —Ñ—É–Ω–∫—Ü—ñ–π"
    echo "7) ‚ùå –í–∏—Ö—ñ–¥"
    echo ""
    echo -n "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é (1-7): "
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –ª–æ–≥—ñ–≤ –æ–¥–Ω—ñ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó
monitor_function_logs() {
    local function_name="$1"
    local log_group="/aws/lambda/${function_name}"
    
    log_info "–ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥—ñ–≤ –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ—ó: ${function_name}"
    log_info "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C –¥–ª—è –∑—É–ø–∏–Ω–∫–∏"
    echo ""
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î log group
    if ! aws logs describe-log-groups --log-group-name-prefix "$log_group" --query 'logGroups[0].logGroupName' --output text 2>/dev/null | grep -q "$log_group"; then
        log_warning "Log group $log_group –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!"
        log_info "–ú–æ–∂–ª–∏–≤–æ —Ñ—É–Ω–∫—Ü—ñ—è —â–µ –Ω–µ –≤–∏–∫–ª–∏–∫–∞–ª–∞—Å—è –∞–±–æ –º–∞—î —ñ–Ω—à—É –Ω–∞–∑–≤—É"
        return 1
    fi
    
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ tail –ª–æ–≥—ñ–≤
    aws logs tail "$log_group" --follow --format short
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ—à—É–∫—É –≤ –ª–æ–≥–∞—Ö
search_logs() {
    local function_name="$1"
    local log_group="/aws/lambda/${function_name}"
    
    echo -n "–í–≤–µ–¥—ñ—Ç—å –ø–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç: "
    read search_query
    
    if [ -z "$search_query" ]; then
        log_warning "–ü–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º"
        return 1
    fi
    
    log_info "–ü–æ—à—É–∫ '$search_query' –≤ –ª–æ–≥–∞—Ö —Ñ—É–Ω–∫—Ü—ñ—ó $function_name –∑–∞ –æ—Å—Ç–∞–Ω–Ω—é –≥–æ–¥–∏–Ω—É..."
    
    # –ü–æ—à—É–∫ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—é –≥–æ–¥–∏–Ω—É
    local start_time=$(date -u -d '1 hour ago' '+%Y-%m-%dT%H:%M:%S')
    
    aws logs filter-log-events \
        --log-group-name "$log_group" \
        --start-time "$(date -d '1 hour ago' +%s)000" \
        --filter-pattern "$search_query" \
        --query 'events[].message' \
        --output text
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
get_function_stats() {
    local function_name="$1"
    
    log_info "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ—ó: $function_name"
    
    # CloudWatch –º–µ—Ç—Ä–∏–∫–∏ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 24 –≥–æ–¥–∏–Ω–∏
    local end_time=$(date -u +%Y-%m-%dT%H:%M:%S)
    local start_time=$(date -u -d '24 hours ago' +%Y-%m-%dT%H:%M:%S)
    
    echo "üìä –ú–µ—Ç—Ä–∏–∫–∏ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 24 –≥–æ–¥–∏–Ω–∏:"
    
    # –ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∏–∫–ª–∏–∫—ñ–≤
    local invocations=$(aws cloudwatch get-metric-statistics \
        --namespace AWS/Lambda \
        --metric-name Invocations \
        --dimensions Name=FunctionName,Value="$function_name" \
        --start-time "$start_time" \
        --end-time "$end_time" \
        --period 86400 \
        --statistics Sum \
        --query 'Datapoints[0].Sum' \
        --output text 2>/dev/null)
    
    if [ "$invocations" != "None" ] && [ -n "$invocations" ]; then
        echo "  üî¢ –í—Å—å–æ–≥–æ –≤–∏–∫–ª–∏–∫—ñ–≤: $invocations"
    else
        echo "  üî¢ –í—Å—å–æ–≥–æ –≤–∏–∫–ª–∏–∫—ñ–≤: 0"
    fi
    
    # –ü–æ–º–∏–ª–∫–∏
    local errors=$(aws cloudwatch get-metric-statistics \
        --namespace AWS/Lambda \
        --metric-name Errors \
        --dimensions Name=FunctionName,Value="$function_name" \
        --start-time "$start_time" \
        --end-time "$end_time" \
        --period 86400 \
        --statistics Sum \
        --query 'Datapoints[0].Sum' \
        --output text 2>/dev/null)
    
    if [ "$errors" != "None" ] && [ -n "$errors" ]; then
        echo "  ‚ùå –ü–æ–º–∏–ª–∫–∏: $errors"
    else
        echo "  ‚ùå –ü–æ–º–∏–ª–∫–∏: 0"
    fi
    
    # –°–µ—Ä–µ–¥–Ω—è —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å
    local duration=$(aws cloudwatch get-metric-statistics \
        --namespace AWS/Lambda \
        --metric-name Duration \
        --dimensions Name=FunctionName,Value="$function_name" \
        --start-time "$start_time" \
        --end-time "$end_time" \
        --period 86400 \
        --statistics Average \
        --query 'Datapoints[0].Average' \
        --output text 2>/dev/null)
    
    if [ "$duration" != "None" ] && [ -n "$duration" ]; then
        echo "  ‚è±Ô∏è –°–µ—Ä–µ–¥–Ω—è —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å: ${duration} –º—Å"
    else
        echo "  ‚è±Ô∏è –°–µ—Ä–µ–¥–Ω—è —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å: –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö"
    fi
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –æ–±–æ—Ö —Ñ—É–Ω–∫—Ü—ñ–π —É —Ä–æ–∑–¥—ñ–ª–µ–Ω–∏—Ö –µ–∫—Ä–∞–Ω–∞—Ö
monitor_both_functions() {
    log_info "–ó–∞–ø—É—Å–∫ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –æ–±–æ—Ö —Ñ—É–Ω–∫—Ü—ñ–π..."
    log_info "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è tmux –¥–ª—è —Ä–æ–∑–¥—ñ–ª–µ–Ω–∏—Ö –µ–∫—Ä–∞–Ω—ñ–≤"
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π tmux
    if ! command -v tmux &> /dev/null; then
        log_warning "tmux –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"
        log_info "–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å tmux: brew install tmux (macOS) –∞–±–æ apt install tmux (Ubuntu)"
        log_info "–ê–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –æ–∫—Ä–µ–º—ñ —Ç–µ—Ä–º—ñ–Ω–∞–ª–∏ –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ–π 1 —ñ 2"
        return 1
    fi
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É tmux —Å–µ—Å—ñ—é
    local session_name="lambda-monitoring-$(date +%s)"
    
    tmux new-session -d -s "$session_name"
    
    # –†–æ–∑–¥—ñ–ª—è—î–º–æ –µ–∫—Ä–∞–Ω –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ
    tmux split-window -h
    
    # –£ –ø–µ—Ä—à–æ–º—É –≤—ñ–∫–Ω—ñ - get-promo-code
    tmux send-keys -t "$session_name:0.0" "aws logs tail /aws/lambda/get-promo-code --follow --format short" Enter
    
    # –£ –¥—Ä—É–≥–æ–º—É –≤—ñ–∫–Ω—ñ - replenish-promo-code  
    tmux send-keys -t "$session_name:0.1" "aws logs tail /aws/lambda/replenish-promo-code --follow --format short" Enter
    
    # –î–æ–¥–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏
    tmux send-keys -t "$session_name:0.0" "echo 'GET-PROMO-CODE LOGS:'" Enter
    tmux send-keys -t "$session_name:0.1" "echo 'REPLENISH-PROMO-CODE LOGS:'" Enter
    
    # –ü—Ä–∏—î–¥–Ω—É—î–º–æ—Å—è –¥–æ —Å–µ—Å—ñ—ó
    log_success "–ó–∞–ø—É—â–µ–Ω–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —É tmux —Å–µ—Å—ñ—ó: $session_name"
    log_info "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+B, –ø–æ—Ç—ñ–º D —â–æ–± –≤—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –≤—ñ–¥ —Å–µ—Å—ñ—ó"
    log_info "–©–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è: tmux attach -t $session_name"
    
    tmux attach -t "$session_name"
}

# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
main() {
    while true; do
        show_menu
        read choice
        
        case $choice in
            1)
                echo ""
                monitor_function_logs "get-promo-code"
                ;;
            2)
                echo ""
                monitor_function_logs "replenish-promo-code"
                ;;
            3)
                echo ""
                monitor_both_functions
                ;;
            4)
                echo ""
                search_logs "get-promo-code"
                echo ""
                echo "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è..."
                read
                ;;
            5)
                echo ""
                search_logs "replenish-promo-code"
                echo ""
                echo "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è..."
                read
                ;;
            6)
                echo ""
                log_info "üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –§–£–ù–ö–¶–Ü–ô"
                echo "====================="
                get_function_stats "get-promo-code"
                echo ""
                get_function_stats "replenish-promo-code"
                echo ""
                echo "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è..."
                read
                ;;
            7)
                log_success "–î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!"
                exit 0
                ;;
            *)
                log_warning "–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑."
                ;;
        esac
        
        echo ""
    done
}

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ AWS CLI
if ! command -v aws &> /dev/null; then
    log_warning "AWS CLI –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"
    exit 1
fi

if ! aws sts get-caller-identity &> /dev/null; then
    log_warning "AWS credentials –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ!"
    exit 1
fi

# –ó–∞–ø—É—Å–∫
main "$@"
