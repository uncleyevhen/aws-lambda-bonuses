import os
import logging
from playwright.sync_api import sync_playwright, Browser, BrowserContext, Page

"""
BrowserManager - –ú–µ–Ω–µ–¥–∂–µ—Ä –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è Playwright –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é headed/headless —Ä–µ–∂–∏–º—ñ–≤

–†–µ–∂–∏–º–∏ –∑–∞–ø—É—Å–∫—É:
1. HEADED (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º) - –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –¥–µ–±–∞–≥—É –∑ –≤–∏–¥–∏–º–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º
2. HEADLESS - –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞/AWS Lambda

–°–ø–æ—Å–æ–±–∏ —É–≤—ñ–º–∫–Ω–µ–Ω–Ω—è HEADLESS —Ä–µ–∂–∏–º—É:

1. –ß–µ—Ä–µ–∑ –∑–º—ñ–Ω–Ω—É —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞:
   export PLAYWRIGHT_HEADED=false
   python3 generate_promo_codes.py

2. –ß–µ—Ä–µ–∑ –∫–æ–¥ (—É promo_logic.py –∞–±–æ —Å–∫—Ä–∏–ø—Ç—ñ):
   browser_manager = create_browser_manager(headed_mode=False)

3. –¢–∏–º—á–∞—Å–æ–≤–æ –≤ —Ç–µ—Ä–º—ñ–Ω–∞–ª—ñ:
   PLAYWRIGHT_HEADED=false python3 generate_promo_codes.py

–£ HEADED —Ä–µ–∂–∏–º—ñ:
- –ë—Ä–∞—É–∑–µ—Ä –≤—ñ–¥–∫—Ä–∏–≤–∞—î—Ç—å—Å—è –≤–∏–¥–∏–º–∏–º
- –ó–±—ñ–ª—å—à–µ–Ω–∏–π viewport (1920x1080)
- –ó–±—ñ–ª—å—à–µ–Ω—ñ —Ç–∞–π–º-–∞—É—Ç–∏ (120 —Å–µ–∫)
- Slow motion –¥–ª—è –∫—Ä–∞—â–æ–≥–æ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è
- –ú—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –±—Ä–∞—É–∑–µ—Ä–∞
"""

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logger = logging.getLogger(__name__)

class BrowserManager:
    """
    –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ Playwright –±—Ä–∞—É–∑–µ—Ä–æ–º –≤ AWS Lambda.
    –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–π –¥–ª—è serverless —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞.
    –ü—ñ–¥—Ç—Ä–∏–º—É—î —è–∫ headless, —Ç–∞–∫ —ñ headed —Ä–µ–∂–∏–º–∏ –¥–ª—è –¥–µ–±–∞–≥—É.
    """
    
    def __init__(self, headed_mode=None):
        self.playwright = None
        self.browser = None
        self.context = None
        self.page = None
        self._initialized = False
        
        # –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫—É
        if headed_mode is not None:
            self.headed_mode = headed_mode
        else:
            # –í AWS Lambda –∑–∞–≤–∂–¥–∏ headless —Ä–µ–∂–∏–º
            if os.getenv('AWS_LAMBDA_FUNCTION_NAME'):
                self.headed_mode = False
            else:
                # –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–º—ñ–Ω–Ω—É —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º HEADED —Ä–µ–∂–∏–º)
                self.headed_mode = os.getenv('PLAYWRIGHT_HEADED', 'true').lower() in ['true', '1', 'yes']
        
        logger.info(f"üé¨ BrowserManager —Ä–µ–∂–∏–º: {'HEADED (–≤–∏–¥–∏–º–∏–π)' if self.headed_mode else 'HEADLESS (—Ñ–æ–Ω–æ–≤–∏–π)'}")
    
    def initialize(self) -> Page:
        """
        –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –±—Ä–∞—É–∑–µ—Ä —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Å—Ç–æ—Ä—ñ–Ω–∫—É –¥–ª—è —Ä–æ–±–æ—Ç–∏.
        """
        if self._initialized and self.page:
            return self.page
        
        logger.info("üöÄ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Playwright –±—Ä–∞—É–∑–µ—Ä...")
        
        # –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
        playwright_browsers_path = os.getenv('PLAYWRIGHT_BROWSERS_PATH', '/opt/playwright-browsers')
        logger.info(f"üîç PLAYWRIGHT_BROWSERS_PATH: {playwright_browsers_path}")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è –∑ –±—Ä–∞—É–∑–µ—Ä–∞–º–∏
        if os.path.exists(playwright_browsers_path):
            logger.info(f"‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è –±—Ä–∞—É–∑–µ—Ä—ñ–≤ –∑–Ω–∞–π–¥–µ–Ω–∞: {playwright_browsers_path}")
            # –í–∏–≤–æ–¥–∏–º–æ —â–æ —î –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
            try:
                contents = os.listdir(playwright_browsers_path)
                logger.info(f"üìÇ –í–º—ñ—Å—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó: {contents}")
            except Exception as e:
                logger.warning(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é: {e}")
        else:
            logger.error(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è –±—Ä–∞—É–∑–µ—Ä—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞: {playwright_browsers_path}")
        
        try:
            # –ó–∞–ø—É—Å–∫ Playwright
            self.playwright = sync_playwright().start()
            
            # –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –±—Ä–∞—É–∑–µ—Ä–∞ - –∞–¥–∞–ø—Ç–∏–≤–Ω–∞ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ä–µ–∂–∏–º—É
            browser_args = []
            
            if self.headed_mode:
                # –†–µ–∂–∏–º –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –¥–µ–±–∞–≥—É - –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏
                logger.info("üñ•Ô∏è –ó–∞–ø—É—Å–∫ —É HEADED —Ä–µ–∂–∏–º—ñ –¥–ª—è –¥–µ–±–∞–≥—É...")
                browser_args = [
                    '--disable-blink-features=AutomationControlled',
                    '--disable-web-security',  # –î–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ —Ä—ñ–∑–Ω–∏—Ö –¥–æ–º–µ–Ω—ñ–≤ –ø—ñ–¥ —á–∞—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
                ]
            else:
                # Headless —Ä–µ–∂–∏–º –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞ (AWS Lambda)
                logger.info("üëª –ó–∞–ø—É—Å–∫ —É HEADLESS —Ä–µ–∂–∏–º—ñ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞...")
                browser_args = [
                    # –û—Å–Ω–æ–≤–Ω—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –¥–ª—è AWS Lambda
                    '--no-sandbox',
                    '--disable-dev-shm-usage',
                    '--disable-gpu',
                    '--disable-web-security',
                    '--disable-features=VizDisplayCompositor',
                    '--disable-blink-features=AutomationControlled',
                    
                    # –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –¥–ª—è serverless
                    '--single-process',
                    '--no-zygote',
                    '--disable-setuid-sandbox',
                    '--disable-background-timer-throttling',
                    '--disable-renderer-backgrounding',
                    '--disable-backgrounding-occluded-windows',
                    '--disable-ipc-flooding-protection',
                    
                    # –ó–º–µ–Ω—à–µ–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø–∞–º'—è—Ç—ñ
                    '--memory-pressure-off',
                    '--max_old_space_size=512',
                    
                    # –í—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –Ω–µ–ø–æ—Ç—Ä—ñ–±–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π
                    '--disable-extensions',
                    '--disable-default-apps',
                    '--disable-sync',
                    '--disable-translate',
                    '--disable-background-networking',
                    '--disable-background-mode',
                    '--disable-client-side-phishing-detection',
                    '--disable-component-update',
                    '--disable-default-apps',
                    '--disable-domain-reliability',
                    '--disable-features=TranslateUI,BlinkGenPropertyTrees',
                    '--disable-hang-monitor',
                    '--disable-ipc-flooding-protection',
                    '--disable-popup-blocking',
                    '--disable-prompt-on-repost',
                    '--disable-renderer-backgrounding',
                    '--disable-sync',
                    '--disable-web-resources',
                    '--disable-web-security',
                    '--metrics-recording-only',
                    '--no-first-run',
                    '--safebrowsing-disable-auto-update',
                    '--use-mock-keychain',
                    
                    # –î–æ–¥–∞—Ç–∫–æ–≤—ñ –æ–ø—Ü—ñ—ó –¥–ª—è AWS Lambda
                    '--enable-logging',
                    '--log-level=0',
                    '--v=1',
                    '--no-default-browser-check',
                    '--disable-component-extensions-with-background-pages',
                    '--disable-default-apps',
                    '--disable-background-mode',
                    '--disable-background-timer-throttling',
                    '--disable-renderer-backgrounding',
                    '--disable-backgrounding-occluded-windows',
                    '--disable-features=TranslateUI',
                    '--disable-features=BlinkGenPropertyTrees',
                    '--run-all-compositor-stages-before-draw',
                    '--disable-threaded-animation',
                    '--disable-threaded-scrolling',
                    '--disable-checker-imaging',
                    '--disable-new-content-rendering-timeout',
                    '--disable-background-media-suspend',
                    '--disable-partial-raster',
                    '--disable-canvas-aa',
                    '--disable-2d-canvas-clip-aa',
                    '--disable-gl-drawing-for-tests',
                    '--disable-canvas-aa',
                    '--disable-3d-apis',
                    '--disable-accelerated-2d-canvas',
                    '--disable-accelerated-jpeg-decoding',
                    '--disable-accelerated-mjpeg-decode',
                    '--disable-app-list-dismiss-on-blur',
                    '--disable-accelerated-video-decode',
                ]
            
            self.browser = self.playwright.chromium.launch(
                headless=not self.headed_mode,
                args=browser_args,
                slow_mo=50 if self.headed_mode else 0,  # –ü–æ–≤—ñ–ª—å–Ω—ñ—à–∏–π —Ä–µ–∂–∏–º –¥–ª—è –¥–µ–±–∞–≥—É
            )
            
            # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –∑ –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏
            context_options = {
                'viewport': {'width': 1280, 'height': 720},
                'user_agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
                'ignore_https_errors': True,
                'java_script_enabled': True,
            }
            
            # –£ headed —Ä–µ–∂–∏–º—ñ –∑–±—ñ–ª—å—à—É—î–º–æ viewport –¥–ª—è –∫—Ä–∞—â–æ–≥–æ –¥–µ–±–∞–≥—É
            if self.headed_mode:
                context_options['viewport'] = {'width': 1920, 'height': 1080}
                logger.info("üñ•Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –∑–±—ñ–ª—å—à–µ–Ω–∏–π viewport –¥–ª—è –¥–µ–±–∞–≥—É: 1920x1080")
            
            self.context = self.browser.new_context(**context_options)
            
            # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
            self.page = self.context.new_page()
            
            # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º-–∞—É—Ç—ñ–≤ (–±—ñ–ª—å—à—ñ –¥–ª—è headed —Ä–µ–∂–∏–º—É)
            timeout = 120000 if self.headed_mode else 60000  # 2 —Ö–≤–∏–ª–∏–Ω–∏ –¥–ª—è –¥–µ–±–∞–≥—É, 1 —Ö–≤–∏–ª–∏–Ω–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞
            self.page.set_default_timeout(timeout)
            self.page.set_default_navigation_timeout(timeout)
            
            if self.headed_mode:
                logger.info("‚è∞ –ó–±—ñ–ª—å—à–µ–Ω—ñ —Ç–∞–π–º-–∞—É—Ç–∏ –¥–ª—è headed —Ä–µ–∂–∏–º—É: 120 —Å–µ–∫—É–Ω–¥")
            
            self._initialized = True
            logger.info(f"‚úÖ Playwright –±—Ä–∞—É–∑–µ—Ä —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –≤ {'HEADED' if self.headed_mode else 'HEADLESS'} —Ä–µ–∂–∏–º—ñ")
            
            return self.page
            
        except Exception as e:
            logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –±—Ä–∞—É–∑–µ—Ä–∞: {e}")
            self.cleanup()
            raise
    
    def get_page(self) -> Page:
        """
        –ü–æ–≤–µ—Ä—Ç–∞—î –∞–∫—Ç–∏–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É, —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—é—á–∏ –±—Ä–∞—É–∑–µ—Ä –ø—Ä–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ.
        """
        if not self._initialized or not self.page:
            return self.initialize()
        return self.page
    
    def cleanup(self):
        """
        –û—á–∏—â–µ–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤ –±—Ä–∞—É–∑–µ—Ä–∞.
        """
        logger.info("üßπ –û—á–∏—â–µ–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤ –±—Ä–∞—É–∑–µ—Ä–∞...")
        
        try:
            if self.page:
                self.page.close()
                self.page = None
                
            if self.context:
                self.context.close()
                self.context = None
                
            if self.browser:
                self.browser.close()
                self.browser = None
                
            if self.playwright:
                self.playwright.stop()
                self.playwright = None
                
            self._initialized = False
            logger.info("‚úÖ –†–µ—Å—É—Ä—Å–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –æ—á–∏—â–µ–Ω–æ")
            
        except Exception as e:
            logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—á–∏—â–µ–Ω–Ω—ñ —Ä–µ—Å—É—Ä—Å—ñ–≤: {e}")
    
    def __enter__(self):
        """Context manager entry"""
        return self.initialize()
    
    def __exit__(self, exc_type, exc_val, exc_tb):
        """Context manager exit"""
        self.cleanup()

# –ì–ª–æ–±–∞–ª—å–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –ø–µ—Ä–µuse –≤ Lambda
_global_browser_manager = None

def create_browser_manager(headed_mode=None) -> BrowserManager:
    """
    –°—Ç–≤–æ—Ä—é—î –∞–±–æ –ø–æ–≤–µ—Ä—Ç–∞—î –≥–ª–æ–±–∞–ª—å–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä –±—Ä–∞—É–∑–µ—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞.
    –¶–µ –æ–ø—Ç–∏–º—ñ–∑—É—î cold start –≤ AWS Lambda.
    
    Args:
        headed_mode: True –¥–ª—è –≤–∏–¥–∏–º–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞ (–¥–µ–±–∞–≥), False –¥–ª—è headless, 
                    None –¥–ª—è –∞–≤—Ç–æ–≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —á–µ—Ä–µ–∑ –∑–º—ñ–Ω–Ω—É —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
    """
    global _global_browser_manager
    
    if _global_browser_manager is None:
        _global_browser_manager = BrowserManager(headed_mode=headed_mode)
    
    return _global_browser_manager

def cleanup_global_browser():
    """
    –û—á–∏—â–∞—î –≥–ª–æ–±–∞–ª—å–Ω–∏–π –±—Ä–∞—É–∑–µ—Ä –º–µ–Ω–µ–¥–∂–µ—Ä.
    """
    global _global_browser_manager
    
    if _global_browser_manager:
        _global_browser_manager.cleanup()
        _global_browser_manager = None
