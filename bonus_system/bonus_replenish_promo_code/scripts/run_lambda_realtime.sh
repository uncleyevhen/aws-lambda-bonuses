#!/bin/bash

# –ó–∞–ø—É—Å–∫ Lambda —Ñ—É–Ω–∫—Ü—ñ—ó –∑ real-time –ª–æ–≥–∞–º–∏

FUNCTION_NAME="replenish-promo-code"

echo "üöÄ –ó–∞–ø—É—Å–∫ Lambda —Ñ—É–Ω–∫—Ü—ñ—ó: $FUNCTION_NAME"
echo "‚è∞ $(date)"
echo ""

# –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é —ñ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
echo "üì° –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é..."

aws lambda invoke \
    --function-name "$FUNCTION_NAME" \
    --payload '{}' \
    --cli-binary-format raw-in-base64-out \
    --log-type Tail \
    response.json > invoke_output.json

echo ""

# –î–µ–∫–æ–¥—É—î–º–æ —ñ –≤–∏–≤–æ–¥–∏–º–æ –ª–æ–≥–∏
echo "üìú –õ–æ–≥–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è:"
echo "----------------------------------------"

if [ -f invoke_output.json ]; then
    # –í–∏—Ç—è–≥—É—î–º–æ LogResult —ñ –¥–µ–∫–æ–¥—É—î–º–æ base64
    LOG_RESULT=$(cat invoke_output.json | jq -r '.LogResult // empty' 2>/dev/null)
    
    if [ -n "$LOG_RESULT" ] && [ "$LOG_RESULT" != "null" ]; then
        echo "$LOG_RESULT" | base64 -d
    else
        echo "‚ö†Ô∏è –õ–æ–≥–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ –≤ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ"
    fi
else
    echo "‚ö†Ô∏è –§–∞–π–ª –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤–∏–∫–ª–∏–∫—É –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ"
fi

echo ""
echo "----------------------------------------"
echo ""

# –í–∏–≤–æ–¥–∏–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü—ñ—ó
echo "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è:"
if [ -f response.json ]; then
    if command -v jq >/dev/null 2>&1; then
        cat response.json | jq '.' 2>/dev/null || cat response.json
    else
        cat response.json
    fi
else
    echo "‚ö†Ô∏è –§–∞–π–ª –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ"
fi

echo ""
echo "‚úÖ –ì–æ—Ç–æ–≤–æ!"

# –û—á–∏—â—É—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤—ñ —Ñ–∞–π–ª–∏
rm -f response.json invoke_output.json
