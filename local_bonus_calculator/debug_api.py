#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–∞–Ω–∏—Ö API KeyCRM
"""

import requests
import json

def debug_api():
    """–î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–∞–Ω–∏—Ö API"""
    
    # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
    try:
        with open('config_newsletter.json', 'r', encoding='utf-8') as f:
            config = json.load(f)
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª config_newsletter.json –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
        return
    
    api_key = config['api_key']
    funnel_id = config.get('newsletter_funnel_id', 15)
    base_url = "https://openapi.keycrm.app/v1"
    
    headers = {
        "Authorization": f"Bearer {api_key}",
        "Accept": "application/json",
        "Content-Type": "application/json"
    }
    
    print("üîç –î–û–°–õ–Ü–î–ñ–ï–ù–ù–Ø –°–¢–†–£–ö–¢–£–†–ò –î–ê–ù–ò–• API")
    print("=" * 50)
    
    # –î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è –∫–∞—Ä—Ç–æ–∫
    print(f"1. –î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è –∫–∞—Ä—Ç–æ–∫ –∑ –≤–æ—Ä–æ–Ω–∫–∏ {funnel_id} (–∑ include contact.client)...")
    try:
        response = requests.get(f"{base_url}/pipelines/cards?pipeline_id={funnel_id}&page=1&limit=3&include=contact.client", headers=headers, timeout=10)
        if response.status_code == 200:
            data = response.json()
            cards = data.get('data', [])
            print(f"   ‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ {len(cards)} –∫–∞—Ä—Ç–æ–∫ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É")
            
            for i, card in enumerate(cards, 1):
                print(f"\n   –ö–∞—Ä—Ç–∫–∞ {i}:")
                print(f"   {json.dumps(card, ensure_ascii=False, indent=6)}")
                
        else:
            print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞: {response.status_code}")
            print(f"   –í—ñ–¥–ø–æ–≤—ñ–¥—å: {response.text}")
    except Exception as e:
        print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
    
    # –î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤
    print(f"\n2. –î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –∫–ª—ñ—î–Ω—Ç—ñ–≤...")
    try:
        response = requests.get(f"{base_url}/buyer?page=1&limit=2", headers=headers, timeout=10)
        if response.status_code == 200:
            data = response.json()
            buyers = data.get('data', [])
            print(f"   ‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ {len(buyers)} –∫–ª—ñ—î–Ω—Ç—ñ–≤ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É")
            
            for i, buyer in enumerate(buyers, 1):
                print(f"\n   –ö–ª—ñ—î–Ω—Ç {i}:")
                print(f"   {json.dumps(buyer, ensure_ascii=False, indent=6)}")
                
        else:
            print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
    
    # –î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è –≤–æ—Ä–æ–Ω–æ–∫
    print(f"\n3. –î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –≤–æ—Ä–æ–Ω–æ–∫...")
    try:
        response = requests.get(f"{base_url}/pipelines", headers=headers, timeout=10)
        if response.status_code == 200:
            data = response.json()
            pipelines = data.get('data', [])
            print(f"   ‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ {len(pipelines)} –≤–æ—Ä–æ–Ω–æ–∫")
            
            for pipeline in pipelines:
                if pipeline.get('id') == funnel_id:
                    print(f"\n   –ù–∞—à–∞ –≤–æ—Ä–æ–Ω–∫–∞ (ID {funnel_id}):")
                    print(f"   {json.dumps(pipeline, ensure_ascii=False, indent=6)}")
                    break
                
        else:
            print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

if __name__ == "__main__":
    debug_api()
    
    # –î–æ–¥–∞—Ç–∫–æ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–≤'—è–∑–∫—É contact_id —Ç–∞ buyer_id
    print(f"\n4. –î–û–î–ê–¢–ö–û–í–ê –ü–ï–†–ï–í–Ü–†–ö–ê: –∑–≤'—è–∑–æ–∫ contact_id —Ç–∞ buyer_id...")
    try:
        with open('config_newsletter.json', 'r', encoding='utf-8') as f:
            config = json.load(f)
        
        api_key = config['api_key']
        funnel_id = config.get('newsletter_funnel_id', 15)
        base_url = "https://openapi.keycrm.app/v1"
        
        headers = {
            "Authorization": f"Bearer {api_key}",
            "Accept": "application/json",
            "Content-Type": "application/json"
        }
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –∫—ñ–ª—å–∫–∞ –∫–∞—Ä—Ç–æ–∫ –∑ contact_id —Ç–∞ include contact.client
        response = requests.get(f"{base_url}/pipelines/cards?pipeline_id={funnel_id}&page=1&limit=5&include=contact.client", headers=headers, timeout=10)
        if response.status_code == 200:
            cards = response.json().get('data', [])
            contact_ids = [card.get('contact_id') for card in cards if card.get('contact_id')]
            
            print(f"   –ó–Ω–∞–π–¥–µ–Ω–æ contact_ids: {contact_ids[:3]}")
            
            # –ê–Ω–∞–ª—ñ–∑—É—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∑ include
            if cards:
                card = cards[0]
                contact = card.get('contact')
                if contact:
                    print(f"   ‚úÖ Contact data –∑–Ω–∞–π–¥–µ–Ω–æ:")
                    print(f"   Contact ID: {contact.get('id')}")
                    print(f"   Contact —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: {list(contact.keys())}")
                    
                    client = contact.get('client')
                    if client:
                        print(f"   ‚úÖ Client data –∑–Ω–∞–π–¥–µ–Ω–æ:")
                        print(f"   Client ID: {client.get('id')}")
                        print(f"   Client Name: {client.get('full_name', '–ù–µ–≤—ñ–¥–æ–º–æ')}")
                        print(f"   üìù –í–∏—Å–Ω–æ–≤–æ–∫: contact.client.id = buyer_id")
                    else:
                        print(f"   ‚ö†Ô∏è Client data –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ contact")
                else:
                    print(f"   ‚ö†Ô∏è Contact data –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î —Ü—ñ ID —Å–µ—Ä–µ–¥ buyer ID
            if contact_ids:
                test_contact_id = contact_ids[0]
                buyer_response = requests.get(f"{base_url}/buyer/{test_contact_id}", headers=headers, timeout=10)
                if buyer_response.status_code == 200:
                    buyer_data = buyer_response.json()
                    print(f"   ‚úÖ Contact ID {test_contact_id} –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –ø–æ–∫—É–ø—Ü—é:")
                    print(f"   –Ü–º'—è: {buyer_data.get('full_name', '–ù–µ–≤—ñ–¥–æ–º–æ')}")
                    print(f"   ID: {buyer_data.get('id')}")
                    print("   üìù –í–∏—Å–Ω–æ–≤–æ–∫: contact_id = buyer_id")
                else:
                    print(f"   ‚ùå Contact ID {test_contact_id} –Ω–µ —î ID –ø–æ–∫—É–ø—Ü—è (—Å—Ç–∞—Ç—É—Å: {buyer_response.status_code})")
    except Exception as e:
        print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
